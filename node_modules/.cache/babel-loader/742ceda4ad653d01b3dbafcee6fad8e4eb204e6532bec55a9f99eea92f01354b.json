{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\automessageapp\\\\src\\\\components\\\\TitleBar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { FaMoon, FaSun, FaBell } from \"react-icons/fa\";\nimport { db, collection, query, where, getDocs } from \"../firebase\"; // Fix Firebase import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TitleBar() {\n  _s();\n  const [darkMode, setDarkMode] = useState(false);\n  const [unreadMessages, setUnreadMessages] = useState(false);\n  useEffect(() => {\n    async function fetchUnreadMessages() {\n      try {\n        const messagesQuery = query(collection(db, \"messages\"), where(\"status\", \"==\", \"unread\"));\n        const snapshot = await getDocs(messagesQuery);\n        setUnreadMessages(snapshot.docs.length > 0);\n      } catch (error) {\n        console.error(\"Error fetching unread messages:\", error);\n      }\n    }\n    fetchUnreadMessages();\n  }, []);\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n    document.body.classList.toggle(\"dark-mode\", !darkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"title-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u2728 AutoMessageApp \\uD83D\\uDE80\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-icons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"notification-icon\",\n        children: [/*#__PURE__*/_jsxDEV(FaBell, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), unreadMessages && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"notification-badge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dark-mode-toggle\",\n        onClick: toggleDarkMode,\n        children: darkMode ? /*#__PURE__*/_jsxDEV(FaSun, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(FaMoon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(TitleBar, \"am1snmZKIe9np5vXIgvEytyECxE=\");\n_c = TitleBar;\nexport default TitleBar;\nvar _c;\n$RefreshReg$(_c, \"TitleBar\");","map":{"version":3,"names":["React","useEffect","useState","FaMoon","FaSun","FaBell","db","collection","query","where","getDocs","jsxDEV","_jsxDEV","TitleBar","_s","darkMode","setDarkMode","unreadMessages","setUnreadMessages","fetchUnreadMessages","messagesQuery","snapshot","docs","length","error","console","toggleDarkMode","document","body","classList","toggle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/automessageapp/src/components/TitleBar.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { FaMoon, FaSun, FaBell } from \"react-icons/fa\";\nimport { db, collection, query, where, getDocs } from \"../firebase\"; // Fix Firebase import\n\nfunction TitleBar() {\n    const [darkMode, setDarkMode] = useState(false);\n    const [unreadMessages, setUnreadMessages] = useState(false);\n\n    useEffect(() => {\n        async function fetchUnreadMessages() {\n            try {\n                const messagesQuery = query(collection(db, \"messages\"), where(\"status\", \"==\", \"unread\"));\n                const snapshot = await getDocs(messagesQuery);\n                setUnreadMessages(snapshot.docs.length > 0);\n            } catch (error) {\n                console.error(\"Error fetching unread messages:\", error);\n            }\n        }\n\n        fetchUnreadMessages();\n    }, []);\n\n    const toggleDarkMode = () => {\n        setDarkMode(!darkMode);\n        document.body.classList.toggle(\"dark-mode\", !darkMode);\n    };\n\n    return (\n        <header className=\"title-bar\">\n            <h1>âœ¨ AutoMessageApp ðŸš€</h1>\n            <div className=\"title-icons\">\n                <button className=\"notification-icon\">\n                    <FaBell />\n                    {unreadMessages && <span className=\"notification-badge\"></span>}\n                </button>\n                <button className=\"dark-mode-toggle\" onClick={toggleDarkMode}>\n                    {darkMode ? <FaSun /> : <FaMoon />}\n                </button>\n            </div>\n        </header>\n    );\n}\n\nexport default TitleBar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}